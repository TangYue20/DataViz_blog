<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SingaporeMerchandiseTrade_Tableau' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='Clipboard_20210530T003537' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20210530T003537' name='Clipboard_20210530T003537leaf'>
            <connection class='textscan' directory='C:/Users/Tang Yue/OneDrive - Singapore Management University/Documents/My Tableau Repository/Datasources' filename='Clipboard_20210530T003537.txt' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20210530T003537leaf' name='Clipboard_20210530T003537#txt' table='[Clipboard_20210530T003537#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator='&#9;'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Year of Date' ordinal='2' />
            <column datatype='integer' name='Trade Volumn' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20210530T003537leaf' name='Clipboard_20210530T003537#txt' table='[Clipboard_20210530T003537#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator='&#9;'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Year of Date' ordinal='2' />
            <column datatype='integer' name='Trade Volumn' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20210530T003537#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;&#9;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Clipboard_20210530T003537#txt]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Clipboard_20210530T003537#txt]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year of Date]</local-name>
            <parent-name>[Clipboard_20210530T003537#txt]</parent-name>
            <remote-alias>Year of Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trade Volumn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trade Volumn]</local-name>
            <parent-name>[Clipboard_20210530T003537#txt]</parent-name>
            <remote-alias>Trade Volumn</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20210530T003537' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20210530T003537]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Tang Yue/OneDrive - Singapore Management University/Documents/Term 3/TangYue_20/DataViz_blog/_posts/2021-05-22-dataviz-makeover-1/Clipboard_20210530T003537_extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/30/2021 10:48:35 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Clipboard_20210530T003537' increment-value='%null%' refresh-type='create' rows-inserted='24' timestamp-start='2021-05-30 10:48:35.721' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Clipboard_20210530T003537#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Clipboard_20210530T003537#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year of Date</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year of Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year of Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Clipboard_20210530T003537#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trade Volumn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Trade Volumn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trade Volumn</remote-alias>
              <ordinal>3</ordinal>
              <family>Clipboard_20210530T003537#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210530T003537]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20210530T003537' id='Clipboard_20210530T003537'>
            <properties context=''>
              <relation connection='Clipboard_20210530T003537leaf' name='Clipboard_20210530T003537#txt' table='[Clipboard_20210530T003537#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_SG' separator='&#9;'>
                  <column datatype='string' name='Category' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Year of Date' ordinal='2' />
                  <column datatype='integer' name='Trade Volumn' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Merchandise_trade_cleaned' inline='true' name='federated.17rh7yu18w1c7m172bksm15t0dji' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Merchandise_trade_cleaned' name='textscan.1ovgw5c0yjua5l0zx61dn18tg4vj'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Tang Yue/OneDrive - Singapore Management University/Documents/Term 3/TangYue_20/DataViz_blog/_posts/2021-05-22-dataviz-makeover-1/data/Merchandise_trade_cleaned.csv' dataRefreshTime='' directory='C:/Users/Tang Yue/OneDrive - Singapore Management University/Documents/Term 3/TangYue_20/DataViz_blog/_posts/2021-05-22-dataviz-makeover-1/data' filename='C:/Users/TANGYU~1/AppData/Local/Temp/TableauTemp/1lcwj5a0pd2wx01824stz0z56cei/Merchandise_trade_cleaned.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ovgw5c0yjua5l0zx61dn18tg4vj' name='Merchandise_trade_cleaned.csv' table='[Merchandise_trade_cleaned#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:D5937:no:A1:D5937:1' header='yes' locale='en_SG' separator=','>
            <column datatype='date' date-parse-format='yyyy MMM' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Export' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ovgw5c0yjua5l0zx61dn18tg4vj' name='Merchandise_trade_cleaned.csv' table='[Merchandise_trade_cleaned#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:D5937:no:A1:D5937:1' header='yes' locale='en_SG' separator=','>
            <column datatype='date' date-parse-format='yyyy MMM' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Export' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Merchandise_trade_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D5937:no:A1:D5937:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5936</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Merchandise_trade_cleaned.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Merchandise_trade_cleaned.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Export</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Export]</local-name>
            <parent-name>[Merchandise_trade_cleaned.csv]</parent-name>
            <remote-alias>Export</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Merchandise_trade_cleaned.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Difference' datatype='real' name='[Calculation_353532618645798915]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Export])) - LOOKUP(ZN(SUM([Export])), -1)) / ABS(LOOKUP(ZN(SUM([Export])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Negative' datatype='real' name='[Calculation_353532618645999620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_353532618645798915]&lt;0,[Calculation_353532618645798915],NULL)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Positive' datatype='real' name='[Calculation_353532618646282245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_353532618645798915]&gt;=0,[Calculation_353532618645798915],NULL)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Hong Kong(Thousand Dollars)&quot;' value='Hong Kong' />
          <alias key='&quot;Japan(Thousand Dollars)&quot;' value='Japan' />
          <alias key='&quot;Mainland China(Thousand Dollars)&quot;' value='Mainland China' />
          <alias key='&quot;Malaysia(Thousand Dollars)&quot;' value='Malaysia' />
          <alias key='&quot;Taiwan(Thousand Dollars)&quot;' value='Taiwan' />
          <alias key='&quot;United States(Thousand Dollars)&quot;' value='United States' />
        </aliases>
      </column>
      <column caption='Trade Volume' datatype='real' name='[Export]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Merchandise_trade_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Tang Yue/OneDrive - Singapore Management University/Documents/Term 3/TangYue_20/DataViz_blog/_posts/2021-05-22-dataviz-makeover-1/data/Merchandise_trade_cleaned.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2021 03:09:23 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Merchandise_trade_cleaned' increment-value='%null%' refresh-type='create' rows-inserted='5936' timestamp-start='2021-05-31 15:09:23.427' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>Merchandise_trade_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Merchandise_trade_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>122</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RSG_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Export</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Export]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Export</remote-alias>
              <ordinal>2</ordinal>
              <family>Merchandise_trade_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3105</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>3</ordinal>
              <family>Merchandise_trade_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RSG_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Asia(Million Dollars)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe(Million Dollars)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Micronesia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Total Merchandise Exports(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Commonwealth Of Independent States(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guam(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Democratic People&apos;s Republic Of Korea(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk Island(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Malaysia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands Antilles(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union(Million Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Total Merchandise Imports(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;America(Million Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives, Republic Of(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cocos (Keeling) Islands(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cook Islands(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other Countries In America(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bermuda(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany, Democratic Republic Of(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos People&apos;s Democratic Republic(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovak Republic (Slovakia)(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis &amp; Fatuna Islands(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brunei Darussalam(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Republic Of Korea(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen Democratic(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chile(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany, Federal Republic Of(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam, Socialist Republic Of(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grenada(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oceania(Million Dollars)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mainland China(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad &amp; Tobago(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United States(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran (Islamic Republic Of)(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macau(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other Countries In Oceania(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Vincent &amp; The Grenadines(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Southern Territories(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuvalu(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa(Million Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czech Republic(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niue(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan(Thousand Dollars)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden(Thousand Dollars)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Merchandise_trade_cleaned.csv' id='Merchandise_trade_cleaned.csv_051EF95F3D4F4C48AD2712D96036F068'>
            <properties context=''>
              <relation connection='textscan.1ovgw5c0yjua5l0zx61dn18tg4vj' name='Merchandise_trade_cleaned.csv' table='[Merchandise_trade_cleaned#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:D5937:no:A1:D5937:1' header='yes' locale='en_SG' separator=','>
                  <column datatype='date' date-parse-format='yyyy MMM' name='Date' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Export' ordinal='2' />
                  <column datatype='string' name='Category' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_5B5CB08AF6F04D1F9F1498A6EFBFEE44]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SG Merchandise Trade Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category' />
        <param name='target' value='SG Merchandise Trade Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='SG Merchandise Trade1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Merchandise Trade of Top Six Trading Countries, 2019-2020</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='10'>-  Singapore merchandise trade increase as a whole, but the trade volume with Malaysia underwent decrease. </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>- Singapore merchandise exports and imports with Mainland China shared the lowest change rate, 0.60% and -2.28%, among Top 6 six trading countries from 2019 to 2020.</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>- Sinagpore Merchandise trade with US experienced the largest change rate among 6 countries,  change rates of import and export are 19.29% and -18.98% respectively.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#555555'>Source: T</run>
            <run fontcolor='#555555' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif'>he sub-section of </run>
            <run auto-url='true' fontcolor='#555555' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif' hyperlink='tabdoc:load-url url=&amp;quot;Merchandise Trade by Region/Market, &amp;quot;'>Merchandise Trade by Region/Market, </run>
            <run fontcolor='#555555' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif'>Department of Statistics, Singapore (DOS).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Merchandise_trade_cleaned' name='federated.17rh7yu18w1c7m172bksm15t0dji' />
          </datasources>
          <datasource-dependencies datasource='federated.17rh7yu18w1c7m172bksm15t0dji'>
            <column caption='Difference' datatype='real' name='[Calculation_353532618645798915]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([Export])) - LOOKUP(ZN(SUM([Export])), -1)) / ABS(LOOKUP(ZN(SUM([Export])), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Negative' datatype='real' name='[Calculation_353532618645999620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_353532618645798915]&lt;0,[Calculation_353532618645798915],NULL)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Positive' datatype='real' name='[Calculation_353532618646282245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_353532618645798915]&gt;=0,[Calculation_353532618645798915],NULL)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Hong Kong(Thousand Dollars)&quot;' value='Hong Kong' />
                <alias key='&quot;Japan(Thousand Dollars)&quot;' value='Japan' />
                <alias key='&quot;Mainland China(Thousand Dollars)&quot;' value='Mainland China' />
                <alias key='&quot;Malaysia(Thousand Dollars)&quot;' value='Malaysia' />
                <alias key='&quot;Taiwan(Thousand Dollars)&quot;' value='Taiwan' />
                <alias key='&quot;United States(Thousand Dollars)&quot;' value='United States' />
              </aliases>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Trade Volume' datatype='real' name='[Export]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Max' name='[max:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Export]' derivation='Sum' name='[sum:Export:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_353532618645999620]' derivation='User' name='[usr:Calculation_353532618645999620:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.17rh7yu18w1c7m172bksm15t0dji].[Calculation_353532618645798915]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_353532618646282245]' derivation='User' name='[usr:Calculation_353532618646282245:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.17rh7yu18w1c7m172bksm15t0dji].[Calculation_353532618645798915]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mainland China(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States(Thousand Dollars)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</column>
            <column>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' scope='rows' value='true' />
            <format attr='display' class='1' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]' value='63' />
            <format attr='text-format' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='text-format' data-class='subtotal' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' value='*#,##0,,.00M;-#,##0,,.00M' />
            <format attr='text-format' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618645999620:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618646282245:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' value='c&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' value='Trade Category' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' />
              <text column='[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618645999620:qk]' />
              <text column='[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618646282245:qk]' />
            </encodings>
            <label-data column='[federated.17rh7yu18w1c7m172bksm15t0dji].[max:Date:qk]' />
            <customized-label>
              <formatted-text>
                <run fontcolor='#ff0000'><![CDATA[<[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618645999620:qk]>]]></run>
                <run><![CDATA[
<[federated.17rh7yu18w1c7m172bksm15t0dji].[usr:Calculation_353532618646282245:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.38381215929985046' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk] + [federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk])</rows>
        <cols>([federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk] / [federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok])</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontsize='8'>Singapore merchdise exports to Hong Kong is much larger than imports from Hong Kong, with largest difference.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.114286'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Hong Kong(Thousand Dollars)&quot;</bucket>
                      <bucket>2019</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='58362433.168440364'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.957143'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Hong Kong(Thousand Dollars)&quot;</bucket>
                      <bucket>2020</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='40382808.280363381'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontsize='8'>Singapore largest import and export trade partner is Mainland China  with lowest percent difference from 2019 to 2020</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.260163'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Mainland China(Thousand Dollars)&quot;</bucket>
                      <bucket>2019</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='61407455.27329468'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.674797'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Mainland China(Thousand Dollars)&quot;</bucket>
                      <bucket>2020</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='35343402.035074048'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontsize='8'>The merchandise exports from Singapore to US enjoys largest growth rate by 19.29%  from 2019 to 2020</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.195122'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;United States(Thousand Dollars)&quot;</bucket>
                      <bucket>2019</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='41347686.550685078'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.609756'>
                  <node-reference>
                    <fields>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
                      <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;United States(Thousand Dollars)&quot;</bucket>
                      <bucket>2020</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='20469151.757764891'>
                  <node-reference>
                    <axis>[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0A4B004F-9824-403D-B7DD-ECBF064B0510}' />
    </worksheet>
    <worksheet name='Total Trade'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Singapore Total Merchandise Trade Trend, 2019-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Merchandise_trade_cleaned' name='federated.17rh7yu18w1c7m172bksm15t0dji' />
          </datasources>
          <datasource-dependencies datasource='federated.17rh7yu18w1c7m172bksm15t0dji'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Hong Kong(Thousand Dollars)&quot;' value='Hong Kong' />
                <alias key='&quot;Japan(Thousand Dollars)&quot;' value='Japan' />
                <alias key='&quot;Mainland China(Thousand Dollars)&quot;' value='Mainland China' />
                <alias key='&quot;Malaysia(Thousand Dollars)&quot;' value='Malaysia' />
                <alias key='&quot;Taiwan(Thousand Dollars)&quot;' value='Taiwan' />
                <alias key='&quot;United States(Thousand Dollars)&quot;' value='United States' />
              </aliases>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Trade Volume' datatype='real' name='[Export]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Export]' derivation='Sum' name='[pcdf:sum:Export:qk:5]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.17rh7yu18w1c7m172bksm15t0dji].[tqr:Date:qk]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Export]' derivation='Sum' name='[sum:Export:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mainland China(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan(Thousand Dollars)&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States(Thousand Dollars)&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.17rh7yu18w1c7m172bksm15t0dji].[pcdf:sum:Export:qk:5]' included-values='non-null' />
          <filter class='categorical' column='[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</column>
            <column>[federated.17rh7yu18w1c7m172bksm15t0dji].[pcdf:sum:Export:qk:5]</column>
            <column>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17rh7yu18w1c7m172bksm15t0dji].[pcdf:sum:Export:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17rh7yu18w1c7m172bksm15t0dji].[sum:Export:qk] + [federated.17rh7yu18w1c7m172bksm15t0dji].[pcdf:sum:Export:qk:5])</rows>
        <cols>[federated.17rh7yu18w1c7m172bksm15t0dji].[tqr:Date:qk]</cols>
      </table>
      <simple-id uuid='{A4C7EDD7-A2F7-4359-A3E9-8DE3F80C100F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='SG Merchandise Trade1' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7250' id='8' name='SG Merchandise Trade1' pane-specification-id='1' param='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' w='14000' x='84000' y='22750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='SG Merchandise Trade1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7250' id='8' name='SG Merchandise Trade1' pane-specification-id='1' param='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' w='14000' x='84000' y='22750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{83BF7FEF-AF38-484B-85AE-9B575978C51D}' />
    </dashboard>
    <dashboard name='SG Merchandise Trade Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='5' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='3' w='98400' x='800' y='1000'>
              <zone h='98000' id='1' name='SG Merchandise Trade1' show-caption='true' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7250' id='6' name='SG Merchandise Trade1' pane-specification-id='1' param='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' w='14000' x='86300' y='22000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='SG Merchandise Trade1' show-caption='true' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7250' id='6' name='SG Merchandise Trade1' pane-specification-id='1' param='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' w='14000' x='86300' y='22000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{76BE4158-C630-41FF-AAEE-F3804292110D}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='SG Merchandise Trade1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='139'>
            <card pane-specification-id='1' param='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
            <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Date:nk]</field>
            <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CD4640B-7BD2-4D29-80A0-A2B9483EE0D9}' />
    </window>
    <window class='worksheet' name='Total Trade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Country:nk]</field>
            <field>[federated.17rh7yu18w1c7m172bksm15t0dji].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52EC7F65-AB1D-47B2-A417-737BDF79F559}' />
    </window>
    <window class='dashboard' maximized='true' name='SG Merchandise Trade Dashboard'>
      <viewpoints>
        <viewpoint name='SG Merchandise Trade1'>
          <highlight field='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B5E7061D-70DB-488A-BEBE-DEC375DAD13E}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='SG Merchandise Trade1'>
          <highlight field='[federated.17rh7yu18w1c7m172bksm15t0dji].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{4CF9565C-1D28-482C-9928-5C8718D7035F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      L2u3rPVHFv19VKtVXdd1PZ/P62q/rdfbfb1VL+mXZ+f1gaLtnFflnj57ZVbv9iS9Wm/rUrOq
      S7Kub64u6tlsVpdkVa9W67osNfWmJOuVQlbfSCT0elPS6426rso9fe7KZb3e7urqoKtfuXxJ
      b7R7N+lx/bemDvSrc3N6oVTRdV3TVxev6lvbBV3XdT2dWNXXk5mda3PpTT2ZLdxw/TVkvVpt
      6rqu661aSZ9fXtc1Xdf/6ut/ql9dXNW19z7VbdX0S5cu6S2pr0vNut7tSXql0dGlZlVv95Rr
      d3qvXO+/Zz6T1NPZbb1ab+vNSkFf2UjojXpTr9cbO3XZrFZ1We3rSwsL+qt/9XU93ZDfK5+i
      L85d0QvVht7vNPUrVxd1VdP1dr2sL65s6tVq9cY60VR9ce6K3mm39Hq7r+u6rjfq9Z3j+UpD
      77bq+qUrs3pfHuivvvqa3q6X9QsXLugXLlzY+U42t7Z1XVf1uUvXjifSOb2YTemLq4kb6u3K
      e9elc2W9LzX1ucUVXdN1PbG2qF+4cEGfX964JvvqrN7pyfrjhKDrT7YrRK1Ww+fz7Z5AXWdj
      dQnB5mVyNL57cve4JU+8AezxZLO3DrDHE82eAezxRLNnAHs80ewZwB5PNHsGsMcTzZ4B7PFE
      81AMQJI6tz3XkaT7dq/7idS5Ua8Pyv0ove9Uzw/KudNz93aNhtTp3vU94d7r/V7K8CC5yRUC
      ILE0y1a1x1gkgmZWKZXaTA8HWUmXmBoKUGwOEOUmgs2Pod/A5I7QKCTwBKJ0BhqHZ+Kce/sS
      mE2Mjo6S3toiPDzMQOoiNcp0Biqi0cr0eJStYhOnOKCrW3GZVDZyVfYNx5BaVUKxERKJLY4+
      c5J3Xvs2o+OHGOgyotzBGRymnN5EFgR0RWP/0WeoZNMogxZd3YpDlAGRhmrAbRhgcoVpl1L4
      gjEyhSpjcR+FWo8jB6dYnL2wc/zEiSNk1pfRLV7cdhOKVEcxekgkV7Ha3US9Nuo9AVHvYRJ0
      TK4wo/EQqc01pK5MbGwMuyCwtL7A8NghOtsb6MFhMgvn2X/seeq5NKP7j7Iy+w7DI6NkqgNi
      HhHF6ERtlyk1ZLx2nfDofnS5i8FgoNMo0xPs6D2JQDiIoMNWYhkFM0OjoxTSW+w7fByl29xZ
      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
    </thumbnail>
    <thumbnail height='192' name='SG Merchandise Trade Dashboard' width='192'>
      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
      28IziZ0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SG Merchandise Trade1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXBd153n97lv33c87PtCEhQIAiLEnZQoUpbcsmy3bdma7tYk3dPuTnf6
      n66kq3oyNXFSlVRSNeWuVKoyqZrMjDpW3GOp3W1bsmSRkkiCO0UQ+77vwMN7eHj7eu/NHyAe
      SUsmQRIAF9xPFYvEe7j3nXd4vvec8zu/RZBlWUZBYZuietwNUFB4nCgCUNjWPBUCkCQJZaW2
      itIXt9mIvngqBBAIBMhms4+7GU8EKysrJJPJx92MJ4JIJEIsFnukezwVAlBQ2Cy2nQDETIaM
      KAKQSiaQHnAGFTMpMiKImTSp9LM9K0mZNGlRetzN2FAyiSiRRBoAKZvafgKIzs0xs7ICQF/X
      F8QyD3Z9ZK6P6VCWsb52FsLpTWjhk0NybpSJ0LP1Hee7b/BZRx8yMsGJNjSPu0Fbj8jy4jya
      eJxQLAXZODe/uMZiVKZx/yGS831Mzy6RNBVyqqWaG5cvs5SQ2Nl4iOpCK7KYZXqkB6u1iCaX
      hqHOq4zOh6lp2IddWqR/cJa42syxA01M9HzB5FKYwrp9NNXkP+4v/tCMdV2mfyZM7d4DeBJz
      tE3NgMrOoYPNjHdcZCoos2fffgTfEIOLfmS1m8OHmzE8gY9XtdaKS0gTSmeY9mW33wwAEpHQ
      CsvLy8SSWSIzI0iFuzl1rJ7R3lGCkRTPH30ZpzZNbGYYfc1BjjeXshJKASBLIuFQCAQ1qRU/
      AdnGqRP78Y+OEYwnqdxzkOoiC9GZMRKOGl499hzhW9c+bUiyBEgkUxkEKU1XVy/JcIydh1+m
      uRhG52OkMyKZ6DL9o5Mkokl27T9OlV0k+oAz69ahoqzCwfjwHLLJth0FoKW8bheNjY0Uuc3o
      LRYiCzOMjk6htVpR642YtGq0Gi0ag57AzDgT04uIt65WafXsbj6IKTnNXFQkGw0yOjpBVm9E
      q9VhNujQaLVodXqiS3OMTsyQeerW0VkWpsbpHl3Eos8SCEnU7NiBUZUFWWRxapyxuShmQ4ZY
      Wk9tdSVaRDQaAyajDq32yV5YGO3FhCdvYMkr335LIHN+Pjq1GoCaHQ0YrXYamGY5Dk0VJaQT
      TgQBamqq0KlSSMtXGc9mqG4yAmDx1qDX6NDuaiCalskza5gPxNm7pwwtKVRaNabCUrRyFv34
      CENjEZx1tY/zKz8EArIkUlTfSIHJimF3FYGkhv0te0iPD5IVsxTveJ6SPCvmmiLikpFGlw0D
      MlpAX1aDSvu4v8NX466pQaU1smffMcweG8LT4Au0tLSEw+FAq93aXpXScSanZkFvpbS4AM2D
      zJdiipmZWZKSlpLSYgwPdPHvZnl5GaPRiNFo3JD7PSipaBTBYkH3WD79bkKhEGq1GovF8tD3
      uEsAkiQRiUQ2pHEbSSgUwmw2o9FsuwnrS0QiEfR6PTrdkzAEHy+xWAy1Wo3BYHjoe9w1ogRB
      eCIHmVqtRqPRPJFt22qUvriNWq3O9cfD8iUBmM3mR27YRhOPxzGZTFu+BHoSSaVSGAyGx7YE
      epLIZrOo1epHGrPb0AqkoHAbRQAK2xpFAArbGkUACtsaRQAK2xpFAArbGsWYrLDtkGWZ/kk/
      /+8nnZs7A0iREcYWN/MTFBQenDl/hP/1Jxfon/Rv3gyQWR7jw88uE5WHMH7tFDPtp/FFRZb8
      Kb7+7ZfoONdKVNay7+hJAtc/JFx5gGM7Sxhv+4irvmL+xWt7N6tpCtucSz3TuaiwTRNAMhTE
      XV7JruKDFNg0FL74e6SjS3SPhdCuTFPS8hqVhhCDSwvY8ooIhZZJi26Woxo8rtVTzjv99GRZ
      VrIh3IHSF7d50L4QhNv/3jQBWCubqYmf5fy1z9AeOkJVvpG50TEKa1rA145Wp0OtViFKEqhN
      eO0yMyOz6PMLMYRX7yGKIrIsI4oimcwTG2GxpWSzWbLZrNIfrPaFLMsP3Bf7dxbx4eVhVqLJ
      zRNA1D9L1uigrspAwL9CuSODX7axz6wiYnawNDGE2hhHZyyBZBiPw83Njj72NuwmGF5NdbHm
      5KRWq9HpdIovEOQc4RRv0NW+WBsbD0JpvpZ//YdH+OmnPZu3CTZabPimJpkNSjTuKkYWs5RX
      VQNg8ZRTbEmxLNnZWZGPp7QUh9tLfc1u3B43NRVPb/yswpOPIAjsKPPwP/3xi5sbECNnwkSy
      NmyP6Lj4uAJinkQed0DMk8TDBsTIsgzJEJnBjzf3HEDQ2rApY1bhSSMVIfHrv0acvq6cBCts
      PzIjZxCnrwOKK4TCNkQOz+X+rQhAYduhLt7HWtoKRQAK2w51yT50B/4MweRSnOG2ilQ6y8xS
      GBkoybNh0Cld/7gQ1Fp0LX+KpuYVRQBbQTCS4P/+ZRsdIwvIssxzlV7+299/Adej2ocVHhpB
      pUbtrlKWQFvBe2d7udo3QzKdJZURaRua593TXY+7WQoo8QCbiihJxJMZ2gbnv/Re+8jCY2iR
      wm+jCGCDkCSZeCrDQiDK9FKYqcUVhmeW8YfiLK3Ev/T7HrvpMbRS4bdRBPAQSJJMIpVhfjnK
      9GKIaV+Y4ZkAIyNDzE4MI+is1D3XRHGenefKnKTm+xj1xXEU17GyME42HuJv/8VfMjk5SV9f
      H6dOnSIQCGCz2RQXhy1GEcB9kGWZRCrLXCDC1GKI2aUwQ9PLzAUixFMZUukseQ4zxR4rdjnI
      W//1N9hVW4knz4vFqKOj/SYHq17m2o12ZqJZklodXz/xTab7rzOSSpGXl0dbWxvBYJCTJ08+
      7q+77XjmBZDOiAxM+YnEU9QUu/A6LXcFRPw2iVSG+UCUifkV5gIRBqcDzPjCJNMZUhkRt81E
      qdfGkYZS6ko9VBTYsZr06LUq/u7HV/BNj1BfXYLDYkAQBPbt20cwGGRoaIjfe/UQP/nJT5gc
      HWB+fp6Kigp6e3upqalBEAQuXrzI8ePHEe7VQIUNZVMFIKdDhLN2HtdyN5pI8+9/cYNr/TOI
      oozTZuDP3tjHCzuLEQRIprMsBKKMzQeZ9UcYmg4wtRgidcta47QaqChwcKyxjLpSD5WFDqwm
      HQadBq1Gffd3lWV++MMfEg6H+eSTT8jPz8dqtbKwsMD169d5/fXXsVgs/MVf/AXRaJRf/epX
      fOc732F+fp6RkRF8Ph+ZTAafz0d+vuIOvlHcr5bw5glAztB3/SxD8TK+dqIZvRSh40Y7OCto
      3lHE5EAXiykTTY07CYz3I7nKKHaaCS9NMhPRU19V8MhNONs+waXuKda+fiCU4D980EbPmI+J
      hRWmFldIpkXSGRGbWU9VkZMX95ZTV+qhqtCBzaJHp1F/abB/FalUig8//JBAIIDRaCQcDrO0
      tMTp06cJhUJMTk7yne98h9/85jfMzMzwjW98A71ez/DwME1NTfzsZz9jbm6Ol19++ZG/t8Jt
      RFG85/ubFg8QGr7GQEqDQVtEZamX0bZzOHfsw2nUICTm6ZkWKTLFiOiK0M11MOOo4URDNQOX
      P2AgU8u3j+/K3eth4wH+7r0rnOuY/NLrNrOe6iIn5QUOaktcVBc5cVgMaDVq1CrhoZYgsiyT
      SqVIpVIYjUbUajWSJJHNZkmlVmuEWSwWEolE7t8AmUwGrVZLKpVCFEVMJtM9P1+JB7jNeuIB
      7gyXlGWZpaUlzp8/z+7du8nLy9u8GcBSUEro3HkWrGbqq1wEE1GCnddwltVToQuRV9FEscZP
      11wEk8WDLR1kJewnrPLgNK6ez63FfIqiSDqdRpIerNZWoevLabO9DhP/9u0jeOwmVKo7B5qE
      mJW49/Pi3giCgMFgQJblXGV7lUqVG6yiKObC99Lp2+VH0+l0rjbDna9/FWvxwCqVcoa5Nj7W
      HjBfxZ0PE1mWuXbtGidPniSRSCCK4uYJQG0t5OXjz9M5LtLRv4Demk/L882MtbUyZfOg1afI
      ChIalQpQ48ozMzo4hbfAxbTv1j1u1fJSq9VotdoHngFeO1BH94SfnrHVG+q1at462UBJvnMj
      v+qWotFo0Gq1Skww64sJXhMJrIqhsbGR9957j+rqavLz8zdPAOGZAT6/ep1I1sm+oy9i0y3x
      yenTqHVODjWU8sXnHzOInpYjJ0hPhXC7HQx0jlG1o5SZpZVcg9cQhAdfmtjMev7t28e4MTjH
      SjRJQ1U+pV7bM2FleRa+w0Zxv75Ye1+WZQRB4O233+bzzz9HFMXNjQmWoqNMxKup8j7afX57
      D7Cdc+IEg0FlD3CLh9kDdHd3093dzf79+7Hb7U9nlcjtmhNHo9EoAriDBxXAV/HUH4StbThj
      sRgGgwGNRoMgCLn9w+NGkiQkSbqrkNtamyVJQqfTKcuZx8gzIYDW1laCwSCFhYVUV1ej0Wgw
      GAyk0+nc0yESieQEEolEsFqtwGqpTb1ej8lkyj1RTCYT6XSabDaLVqslFovhcDhQqVTE43FS
      qRQ6nY5MJoPNZsuZP61Wa85Ko9PpiEajZLNZxsfHqa2txel0kkqlWF5eZnx8nLy8PKqqqohE
      Imi1WsxmM6FQKNcehY1lzWKk1+tzD52nXgBrpsd0Ok1FRQU+36rFp729HYPBQFVVFYFAICeA
      uro6WltbKS4uxmw2s7S0RDqdprm5mc7OTmKxGMePH+fTTz+lqamJubk5fD4f+/bto7GxkV/9
      6leo1epcvd7m5mZ6e3sJBAK0tLTQ09NDWVkZiUSCZDJJfX093d3d9Pf389JLL3H16lV0Oh12
      u53h4WEMBgMffPABe/bswePxcPHiRWw2G9/5zneUPEibwLlz5zh69CjJZBIA9Y9+9KMfPd4m
      3Z94PI7BYMgta377PMDr9VJeXs6FCxdwOp0IgoDD4aClpQW/3w/AiRMnckJYG8Ber5f9+/eT
      TCZZWVnh8OHDmEwmYrEY+fn5NDU18fnnn1NeXo7X68XtdhMMBjl48CCZTIa6ujoWFxeZm5uj
      uLgYt9uNXq/n8OHDzM/Pc+rUKdRqNVarld27d+eKkL/44ossLS2RTCapqalhZWWFZDJJKBRC
      o9Hg9XopLS390jJOpVKRTCYfyiT8LJJKpVCpVPc0g/72WBkdHaW4uJgzZ85w8+bNpz8iTJZl
      Ll68yC9/+Us8Hg9GoxG9Xp87jbXb7YiiyE9/+lOWl5dRq9VEo1EcDgexWIyf/exnhEIhnnvu
      OT788EO6u7spKSnB5XKh0WioqanB5/PlLE8mkym3TNLr9eTn55OXl0cgEEClUuF2u9FqtRiN
      Rt599138fj8GgwGtVovVamVlZYWf//znaDQaLBYLqVSKlZUVNBoNu3btIhQKEY9/OX5AYeMI
      h1ezL5tMpmffCiRJEpcvX2ZoaIiWlhYaGhpy7/X29lJeXv7AqfUeF4oV6G4exgx6+fJlampq
      +Pjjj7eHAJ4lFAHczUaYQZ/6JZCCwqOwrQWwvLzM1NTUl16XZZmOjo6vvGZubo7FxUXi8TiD
      g4Ob3USFTeapN4PKsszQ0BDXrl2jubmZbDaL0+kknU7T3d1NJBLhyJEj+P1++vr6aGlpIZvN
      MjExQSwWY2Zmhtdee42BgQEEQeBb3/oWIyMj/PznPyccDmMymeju7qa5uZnGxkbC4TBjY2OY
      zbc9Ta9cuUJNTQ0Wi4Xe3l4sFguHDh3is88+I5FI8N3vfjd37qDwZPHUzwCiKHLu3DlSqRRj
      Y2PY7XYuXrxIXl4e+fn5vPHGG4yNjZFMJvnBD37A7OwsCwsLNDY2cuLECd544w127dpFOp3G
      ZrMhyzI7d+7kxIkTHDp0iGAwyFtvvcXMzAyweu6g0+kwGAzA6ozw5ptv5qw5J06cwOv1MjAw
      wJEjR2hoaHhgN26FzUGWZXp7e3nnnXfo7Ozk/PnzT/8MoFKpKCkpwWg04na78fv9lJeXs7Cw
      wOzsLKFQCLfbzfLyMq2trTm7vNfrJZlM0tPTg16vp6ioiMnJSRKJBFqtltnZWYaHh0mn01y8
      eDHnf69Wq6mtrcXlcjEwMEAymeTChQskk0kKCwsxGAyoVCqsVivt7e2Ew2Gqq6sfcy8prBEO
      h8lkMvT392+uO/RWIQgCL730EvPz8zidTnQ6HXq9nmAwiN1uZ+fOnRQVFZFMJvH7/RQUFCDL
      MgaDAaPRyIEDB7BYLOh0Onbs2IHNZgPg1KlTCIJAWVkZi4uLFBYWAlBaWprzNdq9ezcqlYr5
      +fmc/V+r1fLcc88Ri8Xo6uoimUwqvvtPCLIs4/P5KC8vzz3oNrlEUoSYaMVieLT7PIwZVJKk
      XHji4yCdTrOwsIDJZMLtdm+Iw5tiBr2bhzkHiEQihMNh7HY7arV6M4Pis4x0XGAoXs7LR3aT
      9k/QOzaPzpJH4+5KFsYG8KeN7N5ZRXBmBNleTL7dSHR5loWYnppSzyN9/J2hiI8DnU5HWVnZ
      Y/t8hS8jCAI2my03y8MmboIjYx341E68TjOplMTs6CyFdXVUlRUQD0wyEZAwZvwMTfkIjA/R
      MzWHjMzM4E26Rnzr/hxZlllYWEAURWZnZ3OxuOthenr6gX7/TiRJYmHh7vyey8vLuWN2haeD
      TZsBDG4v8cFrhBxemg0SgcgyYm8/pbW7cSaDeKv3UqEN0DMXwW7Nw5oKEooGCOHEaV51AluL
      55QkiUwm8zsjwYaHhwmHw4RCIVwuF+fOnaOgoICSkhJ6enoQRZEDBw7Q39/P3NwcBw8exOFw
      kEgkSKVSnD17FpfLRVNTE9FolPb29tymNz8/H5vNlttgO51Orl69is1mY3Z2Fp1Ox+7duyku
      LmZmZgaj0cjY2Bjz8/McPXqUYDDI7OwsO3bs4OrVqzidTlpaWmhtbcXlclFeXp7zYK2trb1n
      n2YyGURRJJvN3jd4fjuwNj4epC98Pl/Ozws2UQBaRynHD0S5ORajc8jPC8dfJplK0t/WgVzu
      QMxkkFTS6kATNLjyjIwNTuMpcDO7tHqPNW9IlUqVKxANtyvIrxEMBuno6OCP//iPc85sk5OT
      hMPhXNBJb28v4XCYwsJCVlZWcDgcjIyMIEkSMzMzVFRUIAgCy8vLCILA4uIie/bsoa+vL5fk
      anR0FLPZjMvloqCggKmpKaqrqxkbG6O4uDjXnkgkwtDQEHa7nb6+Po4fP87169epr6+nt7eX
      rq4u2tvbSafTvPjii0xNTfH666/ft081Gs2X+mI7o1ar79sXd46VTCbDe++9h9fr5dixY0Qi
      kU0Mip8d4sKNdsIZBw0tJQx2XWNhJU1WZWeXt4Rr508zKmhp2H+MbHwFj9vJQNc45dXNzP6O
      oPi1p7IoincFOrtcLlpaWvjiiy/Q6XTYbDb0ej0qlYrS0lJisRjxeBy73Y5Go8kFRwO43W6O
      Hj3K9evXKS8vB6CkpIREIkFBQQH9/f2IokgikSAQCKDX63E4HLnNbWFhIYFAIHe/eDxOIpHg
      5MmTORNoVVUVY2NjuN1uRFEkk8lw8uRJ8vLy8Pv9HDx4cF0BMHcmBlDSorCuvrhzrGi1Whoa
      Gti9ezfBYJAvvvhi8wRgLarl5FGJiUQNdUUa5JKj1GUl1BoNapXAS6++hiQLaDUaZFcjgiDw
      6muvoFarOPx83gN9VklJCV6vl1gsht1uzwW81NbWIggCJpMJjUbD1atXmZyc5NVXXwWguroa
      lUpFW1sbNTU1aLVa7HY7sixTWVmJTqejtrYWu93O6dOnqampYdeuXXz22Wfk5eVRUlKCVqvN
      mUi9Xi9qtZpgMMj4+DgNDQ2IoohKpaK+vp5/+qd/IpPJ8LWvfY0PPviAqakpnn/+eSX6a4tY
      y72k0WjQ6XTs379/k82gsgwI90xGux42whs0Ho/zySefoNPpOHnyJHq9/tEa9YAMDw9z6dIl
      Dhw4wI4dOx7KLKqYQe/mYbxB/X4/Z86c4ejRo4o79NOGIoC72VJ3aCkd5ewHv6R3ZISb/ZM8
      SapZ2+isZWB4kGselLVUjV917drhm+L78/SwbgEsjHTROzxNIBRi9EoPT0rQnizLXLhwgUAg
      wMTEBIODg8TjcSRJIhaLkUgkkCSJZDJJLBbLDc6xsTHS6TSJRIJEIkE8HiedTpPJZIjFYqRS
      qdXiGLfeXzPFxuNxzp49SyQSIZPJEI1GcybagYEB3nnnHXw+H6lUikwmc9f1iUSCWCxGMpnM
      BWUrbB2yLH/JnL7uTbDN6SEbX6L117+mcO8rPKJ3w4aRyWTo6urC5/NRV1fH9evXuXTpEq++
      +iqtra2k02kOHTpEa2srKpWKl156icrKSkZHR0kmk1y/fp1EIoHX681ZlJaXl0kmk5w6dYrT
      p08jSRKHDx/m/PnzFBUV0d/fTyaTQa/XMzo6yvHjx6murqa7uxutVktHRweLi4vU19czODhI
      IpHg5Zdf5te//jVqtRq32004HOZP/uRPFGvOFjMxMUF5eTnJZHLVpLzeC8351fxXf/5nLK2k
      yS8seGL8qHU6HS0tLezZs4elpaVc5l+fz4cgCLmn8JrT253LE5VKxYkTJxgfH6e5uZnz589j
      MBj45je/ydWrV5menuaVV14hlUoxOTlJfX09hw4dwmazcfDgQSYnJ5mfn89lmti7dy8Wi4WZ
      mRkaGxsJBoMcP34cWZaZmZmhpaUlZ0bt7e3NWYgUto7R0VGMRiO/+MUvqKurW/84Xp7q5D/9
      h5/wyW8+5OPPb/IknUNarVbee+89EolELnuyRqMhHo9jNpvR6XS519YOTdYyNawl0RIEAaPR
      SCKR4N1332VlZYW6ujpOnz7NuXPnqK6uxuVyIQgCkiTxwQcf4Pf7SafTuSlVq9XmNmUmk4mS
      khJaW1s5ffo0FRUV6PV6dDodGo1G2cQ+RoxGI6WlpUQikfVbgZbHOrk0FuP5+gq0Bgtul23L
      ZoGttALdvHmT3bt3b7mZdD0oVqC7eRhv0AsXLlBbW8unn36K2Wxe/xJIFJNMDw+hzYax5VXi
      2EIBbCXNzc2PuwkKm4QgCBw7dgyAP/qjPwIeYBOsUqmx3PKBMdmsz+TgV9h+rFsARk8JtQUx
      QqEQktr+xJwDyLJMf38/dXV1RCIRotEopaWl67o2Go3i8/kwm83EYjEqKysfKXAlHo+ztLSU
      8ztfszR4vY9YIEFh01i3ADKJMGPDw8TSCXT5As81VG5mux6Iubk5UqkUkUgEh8PB7Owsg4OD
      HDx4kLm5OWZmZqitraWgoIDW1lbsdjuvvvoqmUyGjo4OLBYLx48f5+LFi4yOjnLixAkGBwdZ
      WFigvr4el8tFa2srTqeTN954A1h1xe3r6yMvL4/h4WGqqqpybbhx4wapVIqmpiZGR0eRZZnv
      fve7is/PY0aWZZaXl/nkk08wm83s3Llz/QKwF9TxB/+qDik+yy8+Gn5iZgAgd9CVSqVyPv7f
      /va3uXz5MhqNhm984xt0dnYyNjbGG2+8QXd3d84cuuZLvuZj/4Mf/IBPP/0UlUrFd7/7Xa5e
      vYrf7+d73/se169fz32mWq0mHo8zOTlJNBplYmKCoqIiwuEwBw4cwOv1EolEsNvtucMwRQCP
      n/b2dr7+9a+j1+u5efPm+gUQWhjiww9biUtpzIXNT9QewGQysW/fPgKBAPPz8/j9ftra2tBq
      tTnTo0qlQqVS0d7eTiAQyF27Y8cOVCoVk5OThEIhrl27hsViQZblnP+9Vqulra0Nn8+XOzF2
      OBx4PB46Ojqora1ldHQ0F9AiCAKdnZ14vV7sdjuZTEYpgvEEsOYGb7PZclml12EGTdN96QID
      c8u5V5yFOzl2pIH75TqQszESohnTI1oU72UGXQt0tlgsZLPZXF3ehYUFKioqyGQyWCwWotEo
      CwsLXLhwAZvNxre+9S0EQSCZTOYKW0uSxOLiIjU1NSQSCWw2G5FIhJmZGS5duoTL5aK6uhqP
      x0NJSQmpVIpwOIzFYiEej2Oz2UgkEuj1eiYmJsjLy8NsNpPNZnNnEY+CYga9m4cxg7a3t+Pz
      +XKxIesQgEhgbo7lWBIxkySaEMkrKKGk2MM9ixDJIpPd5xiOlXP0hRr0akisLOJP6ynJs+Kb
      HieY0VNTWUp4cQrZ6sVtMRAP+fDHtZQV3i5lulHnACsrKywsLJCfn4/D4VjXU1mWZVZWVnKp
      UTQazX2LWW8WigDu5mG8QUVRZGpqCo1Gsxoaef+PUeMuKsUUGOe/vN9KRpZw7TxOafG9szZE
      J7uYjGswaEXiKdDqUnS2dRK1eHCp3QxNh7DrUwxrTcijXSzk1fPSc5VM91+jO151lwB+m4cN
      B/R4PHg8D55tIi8vj7y8BwvSUXgyUavVVFbeNuCseyQtz8+Qt+s4X3/Bxf/30zaSL+3hXls6
      ndVBenACXJXYjDKB8SEs5fUIIR/pSID8usbVoPj5Fex2L6ZkkEjMQUiy47LcHfu75on5u1hY
      WCAvL++hC+P5/X5cLtddfjnLy8uYzWZWVlZwOp20t7dTVVXF9PQ05eXluN3uh/qsR0UUxVxY
      5XZHFEXg3iuC+y1w1i2AvPI64jc/4P/pS1P1wqv39QbVuSs43BThi1E/nX1pprp6cBUVMOML
      kmcqQzKISBoZlUoAQYvbY2B8aBpngYfkalWjXAzsWia2rxrgsizT1dXFkSNH6OrqQqVSsXfv
      XpaWllhZWaGwsJCOjg7KysooLCzkxo0b7Nq1C4Curi6qqqr4+OOPqa+v56WXXkIQBK5cuUJv
      by9vvvkm0WiUrq4uurq6mJubY2RkhDfffJOxsTGsVislJSUsLS2hUqnIZDIsLS2xd+9exsbG
      8Pl8HDhwgOXlZYaGhjh06FDO7Lpnz571dv1drG3mn5QqmI+T9fTFb8duzM3NkZ+fn7tmHQJI
      8cWZz1gx5HHiW29h1WvR6bTcbwUcmRvhetcQobQdZ0EpL77yCqlEjIwwhaegmC+unWVaraZm
      zwGkeAiPy8nlnnb2VzQx7w/lviDcDoj/Ks9JWZZzry8uLjI1NYXJZOLGjRu88sorfPHFF9TV
      1TE5OcnAwABTU1NMTk7i8XiQJAmbzUZVVRW7d+9Go9HQ3d2NXq+ntLQ0l0W6tOMU1jkAABfd
      SURBVLQUp9OJ0+kkLy+PYDDI5cuXUalUNDc3s7CwwAsvvMDp06dJJpPIsozf76esrIzJyUnG
      x8dpbGzMZbFOJBJUVVXdlaBpvaw9EBQv0vX1xW8nUOju7s5lBAmHw+sRgJb6lhcYHejh43/8
      B1IqDRW1LRw/vJt72TQsBZW0EGMiWcvuCjMqAWTJyVFvAVqtlsPHrKQlNRazEcn1HCqNmpdf
      PoHOoGH/3gdfp/v9ftxuNw6HA1EUaWpqoqCggIGBAfLz85mamkKtVudswIIgMDExwcDAACaT
      CZfLBZDL5BCNRnP3ttlsGAwGHA5HLuLr4MGDlJaWsry8TEVFBUajkaqqKvbu3Us2m8VsNlNY
      WIjf70er1VJQUMDCwgKHDx+moKBAyRf6GFlaWiIQCGC329djzldhtrsoq6wk32NHjEWYXwxw
      v6A/QaXBWtCQG/yrr6lyhaENJgs2ixGVABqtFpWgwmDUoxLU6HUPtsktLy/H4/GwtLSEJEl4
      vd7cIPN6vbz//vuEw2Gam5u5cuUKc3NzuVq9dXV1FBYW8tFHHyGKIs3NzZw9e5ZQKITRaKS8
      vByr1YrD4cBoNOLxeKitrWVhYYHOzk5cLhd2ux2Px4PdbufcuXMIgoDX68VisZCfn09RURHv
      v/8+tbW1TE9Pc/PmTaLRKCMjIw/0PRU2BlEUMZvNqxVF728GzRJYXMHstCFl0qDWYtDrUG2h
      GfC3zaDrRZbl3PpPFMVnorTo8vKyYga9xcOcA2SzWdRqdW5ptI5HrQZ3/q0lyVM2bSuJpBTu
      RBCE3ENwbTyse1TEfMP87//6f+CTS5f4Lz8/90RFhCkoPCzrXmyv+Py4i8vRShLpUBRxM1ul
      oLCJrC2NBUFY/wxQWLubknw97dfa2HGkBWUFqvA0sGY+X/uz5v914cIF/H7/emYAiejKCrFU
      hqajr9J0FLR6MxLPQIU9hWeeOw/JZFnm/PnzjI2NoVar8Xq96xFAlrGuG1xr78KX0VOVp2E2
      VcZf/fD3ePLCxhUUfjdrcSN/+Id/yKVLl4B17QF07Dn2Cl6vlQujIi82ufnooxFlD6Dw1LFW
      Nuudd97B6XSSn5+//rQoUjrC6V+8T8f4MvtOfpsTz1c/trQo2xnlHOA26zkHuB/rHsMr86N0
      do+iVauYHJ/h4SprKSg8WazbDJqMJimqqMGc7yGyFFOWQArPBOueAfKq6jnx6su4NBJ1LbuV
      DbDCU8n8/Dw/+clPctU81z0DRJd9LMdNvPjqN9f9YbKYJCUZMChLd4UnAFEUef/991Gr1fT0
      9BCNRtc/A2g0Ipc//mc+u3CF7oGp++8BZBHfWBttvXNkJJlI0MfY2Dj+UBxZlgj6ZpmeW0KU
      IRzwEU6sOlekYiv4liOP8DUVFL4atVrNsWPH+P73v08sFqOkpGQ9AkjRd72bjMlFy/59WHSq
      dQWEx2f76JmNEI/4CMcl/Es+EokondfbWV6Zo7NvgtmxPkbngkx1XKVtbLVQ9mTvBc7fnHj0
      b6ugcA9MJhOVlZXrWQJl6L18mXl5L2vGpvU4Qqu0egRJxOgqxGlWYy8pZmB4AqPDjhTyUVj/
      AhW6ZfoWgticXvTxZWIJB6G0FZd11et0LeZTkiSy2aySWwdyZaAetsL9s4QkSQiC8EB9sZam
      fteuXat1htd3mYwky7lscNI6jg4M+bXsy0S4NjJO37iGXUVaDCYTiVScjHQrWHntNoIej0fH
      xPAMtoI8ErdSEAmCkHNautO1WQGlL+7gQfrCarUC5CLy1hUSuefYMcqa6x/IAS6yMEbv+AKZ
      tJWMmGVocISUrCO6EkKormW+4zJ+LRTUNEEihNvl4mp/Jy/sb2RxeXWHfmdM8O8Kit9uKEHx
      t9mIvti0MqlyNs3iRBtT6Vqad7pJhPyEYinMdjcOi55I0E9c1JLncZJNJtAYtMTCCcxWI4lk
      Fovpdt4J5ST4NspJ8G0e9CR4LclZV1cXFRUVFBYWbnKhbDFNRtbxgCG+X0IRwG0UAdzmYQTQ
      39+PSqWiv7+f4uLi9Z8DPAyCWnff/KEKW4Msy0gLXaRv/GekyDyasoNon/+XqIy/OwPfs4Yg
      COzcuZOenh7KysqIRqObKwCFJwcpMEriw79Gji4CkF7sQ4rMYzj1PyNotse5/lotZ6vVSnl5
      OVeuXFEEsF3IDn6UG/yryGTHziEtDaIufLgsdU8ba+VqJycnsdvtvPzyy4oAtguymPryi+kY
      8X/6IYLBjmB0IhgdCHorKmshgjkPQW9BMDjA5EJldCJYChA0j7aolSWRbP+vSHf8FDmbQrvr
      DXTPv42g3vzFskql4pVXXrnrNUUA2wRtzSkyXe9DJp57TeWtR1N1HDnmR06uIMX8yNElxOnr
      yPFbhzEqFQhqEFSg0iBo9Ah6G4KtCMFgQzB7VgWjsyCYPQgGB4LJtSqg//gOzMzAnj3w+78P
      ajXpgY8Z/bu/Y2Tczq8Pfo0/eec/01D6Dxj++N8gjE/A6Cj81V9Bezu8+CIY7peF9tFQBLBN
      UBU0MLjrb/np+VECko091gD/8th38ZTWIMuALK3+QQZZhmwKORVGTkVWBRIPIIVnV39ORZAj
      C0jLE8iTl5GTIUBYFYlw629ZQNsTQzxYi6BaQDh9A8HgoK1tmuuBBjSGLIG0jVb78/Q32nn7
      6FGYmIRvfnN18BcUbPrgB0UA24bR+RA/viQRy5YA0BqyEft8jr95qxKDTrP6lL+z5IlGj2D4
      cvLenNV8VTWAjCyKxMIBxIiP5MwY9nf/PSsleQRMFuRfTGPSXWe0aQeioMLXoeNm+RH2jbQD
      4IiuYP3lFHL1hwhNTXDtGpSXw+nT8NFH8Nd/valCUASwTbjYNUUseXce/e5RH//c2o/TaiSZ
      yZJIZclkRFKZLBlRIp0RiSczyMjEkhliidXrY8k0sgzxVIZ0RiQr3p0pVnD9CbpwmsL4Ir6a
      AxwbuELryhFkQeBE+Bxfnz9NhW+Ksfxy2qsaybrdfHNqevXpn82C2QzLy2A0QjyuCEDh0fkq
      f5l0VuQfz/evrloQQACNWoVeq0arVqPTqjEZVlPhmwxaLC4dOo0as0GLgIDJoEWnXf09o16D
      IAgYdRr0Og2CJJHX20bx+BChH/wF3zaZMcgil6IH+I+/vEaJf55JZz77hm7wHZMf+a2/JpFI
      YDAYkGpqEGZnUaVS4NzccwpFANuEo3vK+LRtjHDstjVo344i/tXvNWG4NWgNOs1qwZJHRBRF
      /vEf/5FzExNodVr+/LkdmEwmZFnGeeUK0vgZMvt+n6XWXxLfW8nM0QN0nDnD4OAgb731FhOf
      fsqhQ4ceqn7Cg6IIYJtQWejgb946zM8+78EfirO3poDvn9iN07rxLhUqlYo333yTeDzO6dOn
      c/uGSCTC1NQUX3/5CH/wB6f4B6efb3zjGzidTt577z1ef/11BgYG8Hg8d6Uv3EwUAWwTBEGg
      ocpLQ9WJLfmsxcVFLl68yJEjRzCbzciyzKeffkptbS0XLlwgFotht9t57733sFgsnDx5kvPn
      z+P1euno6ODSpUv86Z/+aa5wyWahZDdU2HCy2SyffPIJu3btIpvNkkwmiUajGI1G2tvb6erq
      Ynh4mMLCQl555RXi8TjFxcU0NDRQVlaGxWKhtraWRCKx6W3d1BlAltJkJR1aZZ7ZVsiyTH5+
      Pjdu3MBqtXLgwAFSqRSvvfYaAC+++CIVFRXcvHmTtrY23nzzTQRBwGq1UllZiSiKubrMm83m
      uUPLEsGpNkbiVTTtcEEmQSAYRm+xYzfriYaCJEUNLpedVGQF9BZMeg2ZZJRYRo3jjrWp4g59
      G8Ud+jYbkRlu057NiYUBrg/Ok1FJrJTsIzDeQzglEA6Osnd/JV03BlCpZYp37iPRcw5/cRMv
      1pcx0XWOm6Eyvn9qezhoKTxeNnVxotPrcXhrcVlUuBtaSMeC9A3OkgkuUthwhApdkP7FADZX
      PtrYMvGUk5WUCbdt1T1XkqScNUAURaXMEbeD4tcSBmxn1oLiH6UvNk0AxsJd7E1FuDLcx4Bp
      N+W2FKPTfqrqdyItdt8Kcr/1yyoDeU4tk8MzWAq8JIKrL6+tztZEsInBa08VSl+scuf4eFg2
      TQDRxQnGfRF0WgupRIKOkU4cJdUszc/jtuWx0HuDsC6LvXT3alC808X1wS72texhKbiaGGst
      2FmlUqHRaNBolN30WhC40her42NtbDwsm9aLJlchLv8UMV0Zz9UWEDAnCCdWpyqTs5jndkBE
      1FNa5CLt0KE16TnQsh+708yenY7NapaCwl1sclB8gpRoxPCIsQ6KFeg2ihXoNk+0FQhAUBsx
      KOlrFJ5gFLOKwrZGEYDCtkYRgMK2RhGAwrZGEYDCtkYRgMK2RhGAwrZGEYDCtkYRgMK2RhGA
      wrZGEYDCtkYRgMK2ZlMFICeX8Cs1rxWeYDZNAHI2xvXWzzjz+UXCaZlYcIHrF28QBaRsip7r
      rXx24QaxjMR45zWGF1YACEz3crVrcrOapaBwF5smgPBoF0LJTpqb9qCRZKKxDA69ihQQWRon
      YalmT6mJkYl5srEIUwuLSLLI/OQYvvDm54NRUIBNjAewlu0gc+EzumSR4vy95JeUkl7yAyAl
      Yzjy63BotUzNhlEZnbiECH7/IglDPnZpNVg4k1nNRiyKIul0GkmSfufnbRey2SyZTEZJEMBq
      X0iSRCr1FdVv1smmCUBSGXm+pRHLrEzf0AIvNBTn3hM0OhLhEAljHI1aB6hweWwMD09SWpLH
      xMJq6ORaBJharUan0ykRYYBGo0Gr1aLXb4/CdvcimUyiVqsfqS827TGSDi/w+bmr9AxOUVDo
      oPeLc1zt6+PSmc9JW8uJjF7hQtcERYUF6IxG3G4XYkrE4XZhNin/uQpbw+bGBMenmU2UUuJ+
      tPsoMcG3UWKCb/PkxwSbSikxbeYnKCg8GspOSmFbowhAYVujpBfbIuRMHHFpEGQZdd4OBJ35
      cTdJgW0gAFnMIC0NIqejqFxVqCx5wOaW3fltpOgiydP/I+LsDUBGXdiI4Wv/Cyrr5ue/V7g3
      z7QA5HSUVOuPyQx+BNkUKkcZ+pf+Fk3ZfrZKBLKUJX3l/0KcvJh7TZy+Turi/4Hxtf9tS9qg
      8Lt5pgWQGfwNmZ6fg7x6sCYtj5Jq/Xdw4t8gaAwgrp4gytnkauFnKQtiBnntbzEFYnr1vXQU
      WZYgHVu9JpNAzqYgE1/9OR1f/RwpC5kEcjqWq74uhee+1DZx+toW9YLCvXimBSDO3swN/jWk
      pUESv/hvVn+Qb7lWSNnbP+f+yKDSgloDCAhaIyCAdrVos6DWg1p7988qNai0CGYzgrUA1DoE
      tRYEFdLy2F3tEGzFKDx+nmkBqBylX3pNMLnQvfBDBKPz9uDVWUAQENQ60OhBrUfQrLpoINwy
      lKlWk5wKt/5GuPWecOtnlYq+vn46Ojs5depr5Hm9CCo1oijy+U9+zEpPF6/uMtM9l2TQl+Hb
      f/M2i2NjdHZ28vrrr+cO+0wm5eBkK3mmBaDd/W2y4xeQFrpWX9Do0e3/c7SN30cQNtYCHAwG
      6ejuo2X/Ic589jnf+9730OnUnD17FlVBAwf/u38iNfkp3cEBXvnv/4x/vtqJyeSjtLSUGzdu
      EAqFOHXq1Ia2SeH+bKEAsoyPz1NZ+eWn8mYhWPIxfvP/JDt8BjkeQF16AHVR44YPfgCdTsfC
      wgKffPIJS0tLxGIxdDodExMTpNNp4vE4r732Vwij/4lff36ZxsZG5ubmuHz5Mrt370aSJD77
      7DNOnjypeHpuIVsiAFkS6b3RSvvgPLOh/eyvc9N69jwRUUfL0RP4b3xMtPwFDtcVM9F5mi98
      BXxvA4rkCYKAYHKja/zBBnyLe2MymfjLv/xLEokE77//PjqdLvf6qVOn6O/v5+zZs7jdbo4e
      PcrHH3/M22+/jd/vp6enh0AggEqlwufzUVBQsOntVVhlax41skgwluW55v0c2lNF1D9JQeMp
      Xjm0F//SAhanh/TKMmkpSSAoYbM+fd6gkiTxq1/9ih//+MeUlpYSjUYZGhqisbGRd999l8uX
      L1NTU8PAwAB///d/nytz1NnZSXNzMz6fj56eHmUPsMVsqjdoDlkmHQ/wm48+xVxcT2NhhqCt
      iQqtn67ZMI5khKQZTIKNcDZKKGLg2As7cpc/Dd6ga5UsZVnO1aySZRlBEMhmswiCgFq9uimW
      JAmNRoMgCLnfWauIqVarEYTffUaheIPeZiO8QbdkBpBlCV8wQu1zTTgzEZImG/7pCXyL82i0
      qy4BHoeHwclRvA7XVjRpwxEEIRessloBU0ClUiEIAlqtNjfgNRoNOp0u997a32szwr0Gv8LG
      szWbYEFAlVyho2OY5qMnKc6zkVpsYzxk5YXmQmJLKsxuO7VlWdweNxlZ8ZNR2Bq2ZgkEgEQw
      GMHptD/wlU/DEmirUJZAt9mIJdBdAhBFkcXFxQ1p3EYSj8cxGAyKeRBIJBK5JdV2J5VKIQhC
      zuL2MGzhDPDwPAkzgCRJuc3r4+RJmAFkWSabzT72Gfmp2QQ/Cyib07t5VvpDEcA6WbPgKDxb
      faH+0Y9+9KPH3Yj7sbYHUKvvXXU7mwhx4+oluoemseUVkPSN0Hr5BmmdHacJRrvbmE+Z8dp1
      TA10cKWtG8ngwGU1sWEPNDHNUM8Nrrf1IBqcWNVRLp5rZTokUVLgYKzzOldvdpHVu3BoElw8
      d47poEhxoQfVOtqwtge43/JDSkdpu3qRzv5xzJ4CxOAk5y9eJ66y4LaqGe/rYDqqocBpYm6k
      m0tfdJLRWHHbzRvXF1KGsb52rt7oJKWx4dCluHLhAuOBNEUFTqb6bnL1RgdJtQ2PSeTi2c8Z
      W0pRWuxdV1+kUilUKtX99wDZBO3XLtLeM4LBXYg6Osu581cIScZnSwBiKo7BW0WFU82sz8/8
      UowXDjYzOzCIOc+DQc6wLBoptCbpHk1w5GgTEwN9uAqK0Ko36H89myStddKwq5TxoSlWgotU
      7DmIan6IbF4eWpWdxsZahgaGyPoXydt7BGtoiKC+GJfx/hPyugWQiqF2VVBXaGJiehGfL8i+
      Qy/gG+zDmO9FK2UIZTUU2mW6h1c4dGQfC2P9mNxFGDQb1RdpkmorDfWVTA9PEIkG8NY+jzk0
      RdxiR6+xsadxJ6ODA2T9Czj2HMEbH2FBU4zHdP++WLcA0jEkWxkNVU6Gh+fw+3w0HT5McLj3
      2VoCac1OTNkVJpZilOe70NldmA0WPDaZrMqGx2lZjQPT2LALfs6cPsvIQgAxu4EpF3Vm3BY1
      w8NjFFdXodbosJsMlBaYWI7oyXfr6e8dorK2lrBgotimx1OUR3wltnFtANRGB3YhyshMgKrS
      AjRWBxaDCa9TRVKy4HXbV/tCbcapDfPpmc8ZmlsincpsXCO0RjxWPWPDo3grq9GqVNgtZory
      LYTiGrxuI0P9A5RW72AFA+V2PXml+cQCG5xS3ODArUvRPzJHdU0ZgtmG1WCg0K15tgSQii4x
      OhdmR309dquRdCREMp0gFBUw3uleJGjZ1XKEV08ep9xjR6O598zyQIhxhgcnyK+spyTPipzN
      EEulWQyksJuz9PcNUFRTT7HHhllK4ItnCC0FMdg21gcomwwyOO6nrr4Bp81IJhYhkU4RDMuY
      DXf8oqChtukgr556kfI8B3rDBlp2xCQjQ2O4ynZQXmAHSSKWSOBfTmI1SgwPDOIp30FpvgOb
      nGQhliG0GMDg2OCD0EyI3sFZanc34rEZkBIxEpk0gRXx2YoHiPmnGRyeY2ZqjIrnnqfSreKz
      M2cprtuLHJzgzKU2AhkVUnY/9vg4g7Nhqhv3Y9BunEUjGw0yMjnGxOwU9oJqGitKuXrhU1TO
      Mo5rIrQNTTA5v4jRW8XhnRWcP3caraOEw/Uba1JMBWYYHJtgbm6Ckh1N1BSYOHvmM7xVz6GN
      zvJp63X8KZl0+nkKWKBnYpny+uex6DfumSgmwoxNjjI2PYXFU0ZTXRk3rp9DshZx1JjmzPAE
      IzPz6F2lvNhQy7nzn4C5kGM7Ht6u/1Wkg3MMTYyzsDhFfvUedpS5OHv6DM6yXco5wNPGk3AO
      8KSgnAMoKDwiigAUtjWKABS2NYoAFLY1igAUtjWKABS2NYoAFLY1igAUtjWKABS2NYoAFLY1
      igAUtjX/P2NhsRJnEOE6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Trade' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcNUlEQVR4nO3daXMc173f8W8vs6/YBvvCBQJJcANJSTRFWZJ1LV0rcp6oXKqkbuo6VXmY
      Jym/jVQepFKVsitPnOvkVt0sV7av6HiRJZHiIpICSRDggoUgQQyWwQwGs2/dffIAJCJFmqEJ
      EjPDmfOpUpGEMNN/DPrX53T3OacVIYRAkpqUWusCJKmW9Md/yefz5HK5HdmIZVmoqsyaVH+U
      newCWZaFZVlsbGwQCAR2ajOStG36k7/lm/LpOLdmlzhydITx8xcJ9u5ByUWJpS0G2pwkHW20
      ixgPM36OjvSgqiqapmGz2Xai/qZnWRYXLlxgbGwMu93O+fPnGRkZ4dKlS7zxxht4vV4+/vhj
      VFVlcHCQeDzO7t27KZVKBAIBFhcXGRsbq/WPUTNP3S9xelvoCHrAzFM0NVRVAbubkS4PG0U7
      +WySjVQWmybPraslEAiQTqeZnJxkeXkZv9/PgQMHiMVi2O123n//fVpbW5mbmyMajTI7O8vU
      1BR3794lHA7Xuvya2lYLsLCwgOpwEupqYz0axa0VmS1AV3sbRSVDVvjQdqJa6VtUVcXr9WIY
      BuPj4ywuLjI7O4vD4WDv3r3cur/G5avj/PitE4yOjnLu3DkcDgdCCHK5HA6Ho9Y/Qk09dQBs
      Ti9Hjh3DZncggn4GdQcaJiUL7LqGUAABAmUHypW+zrIEG6ks/3jmUwzFxtGX3ySmzfCffzPO
      9N27dPTtIVNSMI0S15cFG6sLdLc4eSu0l1CPk46gC2FZtf4xampHT4Ifi8fjtLS07PRmGo5p
      WcRTeaKJLKvrGdZTWSLxDJF4hvVknmgyi01TafE5aQu4afW56Gzx0BH00BZw09niIZHJUzIs
      XA6duXCccDTFg5UNltfTrCdzdLV6GeoOMhDyM9QVpKfdT0fQXesfvWpkAKpMCIEQYAlBoWQQ
      TWSJJnJE4hmiic0dfCOVI5rMsZHO43PZ6Qh6CLV4aA+4aQ+4v/Z3F077/2vEFeUva3Uf/8qL
      JZOlWIr7yxssPgpGeC1FtlCiu83LQGeA3nY/Q10Bejv8BL1ONFX5i7fzIpABeM6EEJRMC9O0
      SGWLrKc2d+61jQxrG1liySyJdIGNdJ5CyaTV5yTU4iHU4qXN7yLU4qHV56It4KLV70Krwf2T
      TL7IcizNwmqCh5EE91cShNeSAHQEPfR2+BgIBRjqCtLd7sPnsmPT1RcyGHUdAMsSKMpffmSr
      xHzU1xVicye1hIBHR+LHR+TH24THX9/8f4ZpYVoWliUoGRYl08S0BA8jCW4/iLKnp5X1ZJa1
      RJZYIkc6VyRfNFAUto7YbX43HUE3oaCHoM9J0Osk4HG8MDuNEIKNdJ7lWJrwWpK5pTjLsTQP
      Iwk8LjsBj4OhriCDXQH6OgJ0t3lxO2zYbfV9OaRuA1AoGfzH//klHped7jYfpmVRMiwQgkLJ
      RLDZhAshKBomhmFhWgLTsjZ3WNPCsCwMU2Ca1tYOLv7/Hf5rQYBvBgABFgJdVdG1zSOcXdfQ
      dRVNVYin8sRTOd44Okhni5eOoJuOoAe/x4Hf7cDtbPx7H6ZpEUvmiGxkWFhNcP9RNyqWzOKy
      2wj6HPQ/ai16O3yEgh48Ljt2vT6C8dRXgapFCIjEM3gLBgGPEwVw2DVAwed2oChgt2lbO6Wq
      Kth0DU1R0HV1a6fVNGXzT1VFUTYvG6oKW//WVBVVVdDUzSOxrqlbf25+vXwXJF80SGYKhFo8
      VfhE6pOmqY+6cB4O7gptfb1QMthI51mJZQhHk9xZiPLJV/Mks4WtlrE/FGCwM0AyU6C3w89w
      XysOm4bDrqNWqWWs2xYANncwm6aiabUbRxSPx9E0jVKpRDgcZnR0lHQ6jaIo+P1+hBAsLS3h
      9XqZn59n3759xONxurq6WFxcpL+/v2a11xshxNZBYymaYjGa4t7SOhcmF3HYNYIeJ5YQWJbA
      5bDhc9txO20EPE58bjte1+Z/Prcdv8eJy67jtOvYbdq2u1tVCcC9e/d48OABp06d4g9/+AOd
      nZ0ARCIR3n33XTY2Nvjiiy84efIk4+PjBINBAA4fPszNmzcZHh6mo6Njp8v8FiEE169fR9M0
      Ojo6mJycZM+ePdy4cYNQKMRrr73G/Pw8Z86c4Sc/+QnT09MATExM8MEHH/CrX/2Kn/3sZ1Wv
      +0WzEktjt2k47BqGYVE0TLL5EqlckWy+RCKTJ5Utks4VSWeLpHJFkpkCRcOkZJgYpkWxZKIo
      ymZI3HZafc5H3VA7fo8dj3PzPMXttOFy2HDadTxOW3W6QF6vF4fDgc1mIxQKkUwmOXXqFJcv
      X8YwDO7fv4+u61y4cIFoNMro6Ch37txhdnaWyclJenp6ahIARVHYu3cvCwsLuFwuEokEk5OT
      rK2tkc1mefXVVzlz5gypVArLslhbW2NwcJBQKMSVK1c4cOBA1WuuVw8ePCAUCrG0tEQsFuPo
      0aOMj49z7Ngx2gNOzp07h6qqHDp0iLu3bnH48GHswmS4p53l5WWGhvZ/4/0eX8gwzcfnfYKi
      YZDOFUlli8RTeZKZAtl8kaVomky+SCJTIFcoUSgaFEomuYJRnQDYbLatbsTu3bs5f/48ExMT
      jI2N4XK5OHLkCL29vdy4cYP33nuPS5cu0d/fz9zcHL29vdUo8TsJIfjyyy9ZXl4mkUhgmiZj
      Y2O43W7C4TCrq6v89Kc/5ebNm0QiEUqlEg6HgxMnTnDnzh26urpqVns9sSyLcDi81W2cmZnh
      z3/+M729vUxMTHD8+HFeeeUVzp07RyqVwuPxcO3aNZaWljh48CATExMMDQ194z0VRUFTFDZ7
      x4+7Pnba/JVv4llCIKzN8FhCVKcLNDk5yd27d9m7dy/Ly8sMDw/z8OFDkskkR48exev1cunS
      JX74wx9y+fJlQqEQra2t5PN5XC4XDocDj6d5TzQbwdLSEoZhoKoqly9fxul08tprrzE1NcWp
      U6dYXFwkm83idDqJxWK0trZy8+ZNbDYbiqLwzjvv7EhddX0SLDUG0zT56KOPUFWVtrY2otEo
      x44d49KlS7z55psoisLGxgbDw8N88sknpNNpDh48iK7rxONxHA4Ho6OjO1KbDIDU1OQ8Ramp
      yQBITU0GQGpqMgBSU5MBkJqaDIDU1GQApKYmAyA1NRkAqak99WA4o5jj4VKUwcFeHkzfxtHa
      i8NMEUkLeoM2CrYAXiVDLGejrzO4EzVL0nPz1AEQQsEySpRSa5jebpLRFYQCQV2wGtPI6AWC
      pRgbahe9ocDmsFXLwjTNnahfkp7JU3eBbA4ndv27X6aodhwiRw4nDtm5kl4AFVqAIn/3H/4L
      va+McfL093g8yjqzscZKJIJw7EJLL+Pp6MNuJFnLCAY6Apiqn4KpobA5X1dRlK0FciWp3lQI
      gILbqzEfjvD6177qCXbw8iuPZmd1P56lFaDta9/je85FStJOqRiA1r4udMONCTT+Ah9SM6rQ
      UzdJJHO0tQbltVKpYVUMgNPbzvDwkFzqXGpYFQKg43VYjF+bwqhePZJUVRUCoNLe2UkqGpEB
      kBpWmQAIctk0y+EwqtsnT4ClhlUmAAY3r16nALjdbuTTvqRGVSYANl75/vcw0hlSG3EZAKlh
      VbgPoKI7bNgMm7wMKjWsMgEocO6Pn6F7W3ht7Dj26tYkSVVT5uBu5+T3X8enF/i7X/ySdHVr
      kqSqKbMyXJFLZ79k6OAROlv9z/zAU7kynFSvKrQAp4nem2Y+vERzP0lWamQVzm9zfPHbP3P1
      y6/IVK8eSaqqMifBAtN08O6//BFxw4m3ujVJUtWUCYDB1S8+ZWpmFV2zMTI6jFydX2pEZW+E
      vfrGW/S0u7E5HXI0qNSwKg6HXr57j41CsXrVSFKVVRwNOnJ4BDuaHAohNayKy6K07TrIv353
      1zPfB5CkelV2NGhiI83Mzav8/g9nkZ0gqVGVCUCWX//9b3G2tGK3VeVJqpJUE2X2bo2DJ17l
      0NE9lb5Jkl548imRUlN7hoO7wZXzFwn27kHJrRFNCwZbnSSdbbSLGAsZH2MjtXvKuyT9JbYf
      ALNA0dRQVQVh97CvW7CU1ihZSeJGFrvNh2VZWwvjlkql51i2JD0f2w6AZap0dLWyHo3i1orM
      xATd7e0UlQxZ4UMDVFXdWhfUZpNT66X6s+0AqDYnA/0DaDYHKhYlk81VoxXYPKuQdw+k+rf9
      LpCi4HQ9XjNaQ5OXiqQXkJzvLjU1GQCpqckASE1NBkBqajIAUlOTAZCamgyA1NRkAKSmJgMg
      NTUZAKmpyQBITU0GQGpqMgBSU5MBkJqaDIDU1GQApKYmAyA1NRkAqanJAEhNTQZAamrPZSq7
      USxQNMGhK1iKjqaYlEwFh13OlJfq23PZQ+/emSJfELT57GzYWwiZER4W2nn14MDzeHtJ2jHP
      JQAOj5/eFsFyRkezcmRMFb9TPlhJqn/PJQBKKcv0BuzubqeEIGO041Tsz+OtJWlHydWhpaa2
      1QLk83lyudyObCSdTu/I+0rSs9oKgNPpxOl07tiGZAsg1aNnOAewuD9xEav3ZYpLk6wnC7S1
      B1lPFenvDBLqGcCuyQVypfr2DAFQGRoa5L6hYHMHGOtSmI3r2LQ80eg66ZLKS0O98vkAUl17
      pifE3Lk7x6KVZNBb5MZaiSMvHye2pJLLrJMrFOTzAaS6J68CSU1NjgWSmpoMgNTUZACkpiYD
      IDU1GQCpqckASE1NBkBqajIAUlmmafLJJ58QDocRQjA1NcXnn39OJBLh448/ZmlpibNnzxKP
      x3dsIOVOkwGQypqamsLlchEIBADo6OjAsiwMw2DPnj1cvHiRSCTCxMSEDIDUeAzDIJPJ8Pnn
      nwOwuLjIvn37KJVKlEol3n//fbq6uojFYnz22We1LXabKgSgxN//p1/w+YXLZKtXj1RHRkdH
      MQyDAwcOEA6HWVpa4urVq4TDYaanp4nFYgwNDXH8+HG6u7trXe62VBgMJ1BVg5kHYb53qnoF
      SfXD4XDwox/9aOvffX19Zb93cHCwGiU9dxUCoNKzd4ik4WLHR8tJO0YIwfXb86QLZq1LKctl
      UxnbP4SmVX8hhQoBMInGEnT0dyCntbzY/uHzO9x6mKx1GWUNdbg5uq82LUiFcwATT7CTffv2
      PJ+lIySpDlXYt3XcusGVqxP84K/fxFHhTUzDwDBNbDYd0xLoqgqKgqLUru0QQvDRRx/xgx/8
      ALfbze9//3vsdjt2u51kMklfXx+xWIxdu3YxNDSErsuYN6MKv3UFXzDI/clZDKgYgLu3bqDY
      fNg0k1iqRG8oQGfPALYaro01Pz+PEIJCoYDf7+f06dNMTU2xsrJCLBajUChQKpUoPJq5tnv3
      7toVK9VMmQAICvk8iXgcVyD4xC6Qy+EglkrS09NDMhMhGo2RKsDI7v6azQmenZ1lfn6enp4e
      bDYbf/zjHzl58iRDQ0N8+eWXvP3228zOzhIOh5mZmaG/v7+q9UnfZBgGVZic+C1l9m2Daxcv
      ky6VcDg9T3wTTdfBsvC2ddIpIJ9ZJ2eaNZ0T/M4773D69GkAisUie/fuJZ1O4/P5eOWVV/D5
      fIyMjNDX14eu6w07Z7kWO9V26Lpek25omS3aOPnW65z5X78hY1pPfJOBPfsY2LP5d39vD9Dz
      /Cp8Bm63e+vPY8eOfev/e71evF5vtcuS6kjFyCmajq2GoyXy+Tz/9XdfkS/W5zVsu67yt+8d
      x+Vy1boUaZvKBKDAF386i7u9kxMHD1U8Ad5JQgi+mFohka3PNYU8Do1/9ddPbiGl+lXm8O7g
      5PdPYzeS/PLnv0Su7Ck1qjItQJErFy7Tt/8E/+71HyJX+pcaVZkWwM733vw+2ZVFFiMRZCMv
      NaoKZ7hZPv3ff+Cry+OyCyQ1rDIBsFgNb7D/1D7QXTz5ToAkvZjKBECQSa/ycLUIG1E5IUZq
      WGVOgjV2jxwluhplJWvHXd2amkIkEuHcuXN88MEHCCH49NNP6evrQ1EUFhYWCIVC3Lp1iyNH
      jrBr1y4cjlpdjG5sFadETo/fYS0Woz6vwr/YQqHQ1gwrRVEYGxtDCMHw8DBerxdd1zFNk+np
      aW7cuFHjahtXxdu8A7v6sIqWvAq0A9bW1hgfH2dubo5oNMr169e5fv06d+7cYXx8nM7OTkZG
      RnA4HKysrNS63IZVcSiE3tbH37xzmJ17cljzCgQCfPjhhzidTnRd59ixY1iWhd1u58MPP8Tn
      83H48GGEEJhmfQ4FaQRlAmCSSuVRSmkuXhzntR+cqtlwiEZlt9tpbW39xr8f83jkdbdqKROA
      DP/4q1/T+1IvNZzU9UL4xUeXWEsWal2GtE1lAqCyf+w4R44NA9CYI+Wfj/lIhgdr9X2h+EC/
      v9Yl1K0yAfDy8slRLMviBZlPIUnbUuEkOM9v/uHXuFt7eOOd1yueA9yfmSKyUaS7M0Bko8hA
      Z4BAe5d8TrBU9ypeBTJKRSzryRdBDdXJwUEntyMmRjHLaqRAxtAZ6G7DsiyKxSLp9NOPKDIM
      g7eP9tbthBibruJx6IxmirUupaKOgJOhzkCtyyjL79K5fS8MNViBqmwAFu8/pKW1hXSh+MSV
      4Uq5FLMbBsOHj5FaCZNIxkkm1lF7O1BVFbvdvu2ph3/7/sltvU56cWQyGf7Nvz9Dtgar15UN
      QN/QMH1Dw3/RmwyP7CdXtPDpCu7ubkKhdgy5nJb0AqhwJ9jiz7/+Lddv333iUAjd5sDncYGi
      bK6w4HDhcshrR1L9q3CYLnDnqwmIpXhp/4i8FCo1pIr9lFfe+2foVkmuDi01rApdIDvpRJiH
      iZQcCyQ1rIqjQe02HZuiYVSrGkmqsgoBKLKeMHjppV1yVQipYVUIgE4utsLkzBz1eRtKkp5d
      hZPgEtGHa7g9QUpUXh5dkl5UFR+Q8fK7b9I+uAu5fKzUqCpeBn14f5a1ZIHu3k7ZAkgNqWIL
      4HV4aOsPyYfkSQ2r7LpAQuSZu3mHS5evy8ugUsMquzz6//n1b/EM7mHP/pfkMAipYZVpATQO
      HjlMV08PPV1tsgskNawyLYDC7O0b3LwVJ5vP0jXULwc3Sw2pzH6tc+j4afytYbC55Z1gqWGV
      PbAXMklmZmfo2nPoiU8Jm7l1nUxJp8XvJJLYnBPcEuqRc4KlulcmAHmuTczzw/fe48rZ8xQ4
      8t0L5BoF5peimIYJig1d0xBmnshakYyhMdQbqtlzgqUXRy1XvisTAItSJsm5s2dJr+fLXwZV
      dTraWkhYObKrEZx7R+hGI5VcJ5lMoPZ31ew5wdKLo1is3aICingOT1I2jRKGtTl8WgiBEBYC
      BV3bPHuIx+O0tLQ8c7FSY6rlpPgy3XuTYtFg8soF/umf/sSTFv7TdBsOuw1FUR4d8fWtnV+S
      6lnZ89vpyessr2/g8HrlJVCpYZVtAcIPwxQMlXa/Rw6FkBpWmYO7jT3DQwhPiL2D3fJOsNSw
      yt4J3nvgSHUrkaQaeNI9LklqaDIAUlOTAZCamgyA1NRkAKSmJgMgNTV5k1eqOV3X+bf//Cim
      Vf1lmJ/LYLgnkYPhpHolu0DSC00IwcrKCtFodOtr0WgU0zS5d+8emUyGcDhMsVj8zjkpsgsk
      vdAKhQLnz59HVVV+/OMfUyqV+PnPf87bb7+Npmmsr68zOzvL4OAgR44c+da8FNkCSC+s1dVV
      vvrqK0zTxDAMFEXhzJkz+P1+wuEw9+/fp1Ao4HK5WFpa4ne/+923nnr6DC2Axf2bX6L0nqC0
      cou1RIFQKEgsUaS/K0BbZ5+cEyztqM7OTlpaWohEIqiqyvLyMm+99RY3b96kv7+fq1ev0t3d
      TXt7O4VCgYWFhW+9x7ZOgtMbEdZzCgOeAveNTsz4Aj1+hbtRhVJuA7sK7mAnewa6EEIQj8cJ
      BoPP5YeWpOdpWy2Ax9+Oy2dw56vzPLCSDLpzXF8pcuTVV4mGNbKpGOl0GkVRUBQFTdPQ5Awx
      qQ7Jy6BSU9tqAfL5PLlcbkc2kkqltvU6y7JQ1ac/TxdCoChPd/7x+DjwNK/bzmsev+5pXwPb
      +zy2+xnW+7a287rv+n1tBcDpdOJ07szzIIUQ22oBDMNA15+ul/YsO+XTvk4IgWVZT929q2Zw
      tvMZbndb2w12tWqsGICdtJ0PBdjWecN2t7Xd123nyFXNGrd77rWdbVXz97yd7X3X99f1jbDt
      fqDVUu/1gazxSWoegHt3b7KcMBgKeVlcibLrpf0sztxj/4lRpm9MIuxeDo2OsDA9SSyVo2tg
      D6nV+6QtJy8fObDj9aXXV7k7/4CWtm5ikSVcwU5aHSY54cSt5liKJBgY3odXyTF5dx7d5aen
      xcHDxSX695+g02/f8RpXFuZYWI3S3dlFOLxEz9BeUosP6To0yvq92ySygoNjY6SW73F/ZZ1A
      ew9DHS4uXpvl9dMvV+Vu6OztG6ymBEMdLh5G4uzevYfFhQU8LR0UN1Ypah7GDh9g/s4E8XSB
      3l17WV+Zp7vvAK3BnXtUe83vBPf0DRBqayFvKBwbGyWbLtLX2YpAAQU21iMUDUFJtXP82BiZ
      ZJzevn7aW6tzX8ETbKezrQ2badC/bxSXYtA1sBtdMVBQUESJlbU4iY04I4dOEHQpeP1BDMPC
      bqvOpd+O7h7aWtowckUOvXqcYjrLYF83IAAF8lFWkybxnMGJE8cRxSSLy1HaW3xVqQ+gp2+Q
      UHsLeUvj6MERCiWF3q52gm4FV/su2vx2TEtg6k6Ojx0imUzS198LOzxCtMYBsBi/cpVsvogi
      CtyYuIXNpjA9O8vD5RhBnwePN4BdV6CY4fr4OKrNwfj4DQqFEtaTN/DMVuZv82A1gebUeXDn
      NqmiYPHeNHNz99BdfgQq7a0BPF4vM1PXWI1nScTXcbo0kolsFSoUTF4fJ5nJY3MqTF69BjYb
      M/dmmbu3gN8fwFD9hPwaHl1w/do1CoZCJpNm/t49ssVqLEdoMX7lCvl8EYw8N2/dpZiOcnt+
      haKwkVyZIxLPoqlg5dNcu3YDu9PN/Mw09+4/3NHfc43vAwgMw0AIBV1XMU0LTVMxDBNFVVGE
      AFVFU1WEsCgV82TzAq/bjlAUdF3f8TWLLMvENC1UTQPLQlE1LMtECIGmaY+uAukoCEzTJJFM
      EggEsCyxWd+Od283t2tZAk3TsSwTTdMwDAMUBfVRAZqmIYTANIok03laWwJYlrX5Oe90iQiM
      krG5XqyuYpoCTVUwTBNV1VAQCEXZ/D1bFsVClryh4nHadvz3LG+ESU2t5ucAklRLMgBSU5MB
      kOqXEMQiKyTSzzBERwjWo2uUTIvoaphIbIOvd/prfh9AksqJPpji0mwcIxXj+2+/jc+uUhIq
      y0tLdPf2kUtu8GD6JhnvEEd3tZDMCfxuG8WSSdDnYmFpjVa34L//5iw//Zt/wWeffUK7x033
      8b/CkY0RCHhkAKT6tb4eY9e+I8Run+XK5Ysc7HGzkA8wceUzuvr3k1xPcqDPiaUo/OZ//DfW
      RQvdHpNjb/6Y6YlzOP0e5mbytIQ6cdhUPIFWju3r4sLcNIu3ruNpC8kASPVrcPgAf/r8HIsr
      CU4ebWVybplgh53uXcO0uH0M9A8y1AqXZ9YZ3D1Mt6Mdt1ZiqLsNPdHBjbkwI/tH8WeL2DQV
      K5vg7E2Nl4/tIr2+i452n7wMKtW/QiGPze7YuqfxPMkWQKp7DsfOjQX6v1S+wBogpAjaAAAA
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
